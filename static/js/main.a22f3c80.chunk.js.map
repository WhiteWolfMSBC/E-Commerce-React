{"version":3,"sources":["Config/Config.js","Global/ProductsContext.js","Global/CartReducer.js","Global/CartContext.js","Components/Navbar.js","Components/Products.js","Components/Home.js","Components/Signup.js","Components/Login.js","Components/NotFound.js","Components/Cart.js","Components/AddProducts.js","Components/Cashout.js","App.js","serviceWorker.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","auth","db","firestore","storage","ProductsContext","createContext","ProductsContextProvider","state","products","prevProducts","this","collection","onSnapshot","snapshot","docChanges","forEach","change","type","push","ProductID","doc","id","ProductName","data","ProductPrice","ProductImg","setState","Provider","value","props","children","React","Component","toast","configure","CartReducer","action","product","index","updatedPrice","updatedQty","shoppingCart","totalPrice","totalQty","find","info","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","qty","cart","TotalProductPrice","findIndex","filtered","filter","CartContext","CartContextProvider","useReducer","dispatch","Navbar","user","history","useHistory","useContext","className","to","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","aria-current","role","icon","onClick","signOut","then","Products","length","map","key","src","alt","Home","useEffect","onAuthStateChanged","Signup","useState","name","setName","email","setEmail","password","setPassword","error","setError","autoComplete","onSubmit","e","preventDefault","createUserWithEmailAndPassword","cred","uid","set","Name","Email","Password","catch","err","message","onChange","target","placeholder","required","for","Login","signInWithEmailAndPassword","NotFound","Cart","ic_add","size","ic_remove","iosTrashOutline","style","marginTop","AddProducts","productName","setProductName","productPrice","setProductPrice","productImg","setProductImg","types","ref","put","on","bytesTransferred","totalBytes","console","log","child","getDownloadURL","url","add","Number","document","getElementById","class","selectedFile","files","includes","Cashout","cell","setCell","address","setAddress","successMsg","setSuccessMsg","time","Date","getTime","BuyerName","BuyerEmail","BuyerCell","BuyerAddress","BuyerPayment","BuyerQuantity","setTimeout","htmlFor","disabled","App","get","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.a22f3c80.chunk.js","sourcesContent":["import  firebase from 'firebase/app'\nimport 'firebase/storage';\nimport 'firebase/firestore';\nimport 'firebase/auth'\n\nconst firebaseConfig = {\n\n        apiKey: \"AIzaSyDoetawMo5LnYtqQPXMF5O1FWAMpfrtolQ\",\n        authDomain: \"e-commerce-with-react-fe537.firebaseapp.com\",\n        databaseURL: \"https://e-commerce-with-react-fe537-default-rtdb.firebaseio.com\",\n        projectId: \"e-commerce-with-react-fe537\",\n        storageBucket: \"e-commerce-with-react-fe537.appspot.com\",\n        messagingSenderId: \"853200980245\",\n        appId: \"1:853200980245:web:a5a2c7f19ca2d9f0e0411c\"\n};\n\nfirebase.initializeApp(firebaseConfig);\n\nconst auth = firebase.auth();\nconst db = firebase.firestore();\nconst storage = firebase.storage();\n\nexport { auth, db, storage }","import React, { createContext } from 'react'\nimport { db } from '../Config/Config'\n\nexport const ProductsContext = createContext();\n\nexport class ProductsContextProvider extends React.Component {\n\n    state = {\n        products: []\n    }\n\n    componentDidMount() {\n\n        const prevProducts = this.state.products;\n        db.collection('Products').onSnapshot(snapshot => {\n            let changes = snapshot.docChanges();\n            changes.forEach(change => {\n                if (change.type === 'added') {\n                    prevProducts.push({\n                        ProductID: change.doc.id,\n                        ProductName: change.doc.data().ProductName,\n                        ProductPrice: change.doc.data().ProductPrice,\n                        ProductImg: change.doc.data().ProductImg\n                    })\n                }\n                this.setState({\n                    products: prevProducts\n                })\n            })\n        })\n\n    }\n    render() {\n        return (\n            <ProductsContext.Provider value={{ products: [...this.state.products] }}>\n                {this.props.children}\n            </ProductsContext.Provider>\n        )\n    }\n}\n\n","import { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\ntoast.configure();\n\nexport const CartReducer = (state, action) => {\n\n    const { shoppingCart, totalPrice, totalQty } = state;\n\n    let product;\n    let index;\n    let updatedPrice;\n    let updatedQty;\n\n    switch (action.type) {\n\n        case 'ADD_TO_CART':\n\n            const check = shoppingCart.find(product => product.ProductID === action.id);\n            if (check) {\n                toast.info('this product is already in your cart', {\n                    position: \"top-right\",\n                    autoClose: 2000,\n                    hideProgressBar: false,\n                    closeOnClick: true,\n                    pauseOnHover: false,\n                    draggable: false,\n                    progress: undefined,\n                });\n                return state;\n            }\n            else {\n                product = action.product;\n                product['qty'] = 1;\n                product['TotalProductPrice'] = product.ProductPrice * product.qty;\n                updatedQty = totalQty + 1;\n                updatedPrice = totalPrice + product.ProductPrice;\n                return {\n                    shoppingCart: [product, ...shoppingCart], totalPrice: updatedPrice, totalQty: updatedQty\n                }\n            }\n            break;\n\n        case 'INC':\n            product = action.cart;\n            product.qty = ++product.qty;\n            product.TotalProductPrice = product.qty * product.ProductPrice;\n            updatedQty = totalQty + 1;\n            updatedPrice = totalPrice + product.ProductPrice;\n            index = shoppingCart.findIndex(cart => cart.ProductID === action.id);\n            shoppingCart[index] = product;\n            return {\n                shoppingCart: [...shoppingCart], totalPrice: updatedPrice, totalQty: updatedQty\n            }\n            break;\n\n        case 'DEC':\n            product = action.cart;\n            if (product.qty > 1) {\n                product.qty = product.qty - 1;\n                product.TotalProductPrice = product.qty * product.ProductPrice;\n                updatedPrice = totalPrice - product.ProductPrice;\n                updatedQty = totalQty - 1;\n                index = shoppingCart.findIndex(cart => cart.ProductID === action.id);\n                shoppingCart[index] = product;\n                return {\n                    shoppingCart: [...shoppingCart], totalPrice: updatedPrice, totalQty: updatedQty\n                }\n            }\n            else {\n                return state;\n            }\n            break;\n\n        case 'DELETE':\n            const filtered = shoppingCart.filter(product => product.ProductID !== action.id);\n            product = action.cart;\n            updatedQty = totalQty - product.qty;\n            updatedPrice = totalPrice - product.qty * product.ProductPrice;\n            return {\n                shoppingCart: [...filtered], totalPrice: updatedPrice, totalQty: updatedQty\n            }\n            break;\n\n        case 'EMPTY':\n            return {\n                shoppingCart: [], totalPrice: 0, totalQty: 0\n            }\n\n        default:\n            return state;\n\n    }\n\n}\n","import React, { createContext, useReducer } from 'react'\nimport { CartReducer } from './CartReducer'\n\nexport const CartContext = createContext();\n\nexport const CartContextProvider = (props) => {\n\n    const [cart, dispatch] = useReducer(CartReducer, { shoppingCart: [], totalPrice: 0, totalQty: 0 })\n\n    return (\n        <CartContext.Provider value={{ ...cart, dispatch }}>\n            {props.children}\n        </CartContext.Provider>\n    )\n}","import React, { useContext } from 'react'\nimport { Link } from 'react-router-dom'\nimport { auth } from '../Config/Config'\nimport { Icon } from 'react-icons-kit'\nimport { cart } from 'react-icons-kit/entypo/cart'\nimport { useHistory } from 'react-router-dom'\nimport { CartContext } from '../Global/CartContext'\n\nexport const Navbar = ({ user }) => {\n\n    const history = useHistory();\n    const { totalQty } = useContext(CartContext);\n\n    // handle logout\n    const handleLogout = () => {\n        auth.signOut().then(() => {\n            history.push('/login');\n        })\n    }\n\n    return (\n\n\n        <nav className=\"navbar navbar-expand-lg bg-danger\">\n        <div className=\"container-fluid\">\n          <Link className=\"navbar-brand text-light fs-4 fw-semibold\" to=\"/\">E-Commerce</Link>\n          <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n            <span className=\"navbar-toggler-icon\"></span>\n          </button>\n          <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n            <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\n              <li className=\"nav-item\">\n                <Link className=\"nav-link active text-light fs-5 fw-semibold\" aria-current=\"page\" to=\"/login\">Login</Link>\n              </li>\n              <li className=\"nav-item\">\n                <Link className=\"nav-link text-light fs-5 fw-semibold\" to=\"/signup\">Sign-Up</Link>\n              </li>\n              <li className=\"nav-item\">\n                <Link className=\"nav-link text-light fs-5 fw-semibold\" to=\"/addproducts\">Add Product</Link>\n              </li>\n            </ul>\n            <form className=\"d-flex\" role=\"search\">\n            <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\n              <li className=\"nav-item\">\n              <Link to=\"/\" className='navlink nav-link text-light fs-5 fw-semibold'>{user}</Link>\n              </li>\n              <li className=\"nav-item\">\n              <Link to=\"/cartproducts\" className='navlink nav-link text-light fs-5 fw-semibold'><Icon icon={cart} /></Link>\n              </li>\n              <li className=\"nav-item\">\n                <Link className=\"nav-link text-light fs-5 fw-semibold\" to=\"/no-of-products\">{totalQty}</Link>\n              </li>\n              <li className=\"nav-item\">\n                <button className='btn btn-outline-light fs-5 fw-semibold' onClick={handleLogout}>Logout</button>\n              </li>\n              </ul>\n            </form>\n          </div>\n        </div>\n      </nav>\n    )\n}\n","import React, { useContext } from 'react'\nimport { ProductsContext } from '../Global/ProductsContext'\nimport { CartContext } from '../Global/CartContext'\n\nexport const Products = () => {\n\n    const { products } = useContext(ProductsContext);\n\n    const { dispatch } = useContext(CartContext);\n\n    return (\n        <>\n            {products.length !== 0 && <h1>Products</h1>}\n            <div className='products-container'>\n                {products.length === 0 && <div>slow internet...no products to display</div>}\n                {products.map(product => (\n                    <div className='product-card' key={product.ProductID}>\n                        <div className='product-img'>\n                            <img src={product.ProductImg} alt=\"not found\" />\n                        </div>\n                        <div className='product-name'>\n                            {product.ProductName}\n                        </div>\n                        <div className='product-price'>\n                            Rs {product.ProductPrice}.00\n                    </div>\n                        <button className='addcart-btn' onClick={() => dispatch({ type: 'ADD_TO_CART', id: product.ProductID, product })}>ADD TO CART</button>\n                    </div>\n                ))}\n            </div>\n        </>\n    )\n}\n","import React, { useEffect } from 'react'\nimport { Navbar } from './Navbar';\nimport { Products } from './Products'\nimport { useHistory } from 'react-router-dom'\nimport { auth } from '../Config/Config'\n\nexport const Home = ({ user }) => {\n\n    const history = useHistory();\n\n    useEffect(() => {\n        // forcing user to signup\n        auth.onAuthStateChanged(user => {\n            if (!user) {\n                history.push('/login');\n            }\n        })\n    })\n\n    return (\n        <div className='wrapper'>\n            <Navbar user={user} />\n            <Products />\n        </div>\n    )\n}\n","import React, { useState } from \"react\";\nimport { auth, db } from \"../Config/Config\";\nimport { Link } from \"react-router-dom\";\n\nexport const Signup = (props) => {\n  // defining state\n  const [name, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [error, setError] = useState(\"\");\n\n  // signup\n  const signup = (e) => {\n    e.preventDefault();\n    auth\n      .createUserWithEmailAndPassword(email, password)\n      .then((cred) => {\n        db.collection(\"SignedUpUsersData\")\n          .doc(cred.user.uid)\n          .set({\n            Name: name,\n            Email: email,\n            Password: password,\n          })\n          .then(() => {\n            setName(\"\");\n            setEmail(\"\");\n            setPassword(\"\");\n            setError(\"\");\n            props.history.push(\"/login\");\n          })\n          .catch((err) => setError(err.message));\n      })\n      .catch((err) => setError(err.message));\n  };\n\n  return (\n    <div className=\"container\">\n      <div className=\"row\">\n        <div className=\"col-xl-2 col-lg-1 col-md-1 col-sm-12 col-xs-12\"></div>\n        <div className=\"Product-card col-xl-8 col-lg-4 col-md-1 col-sm-12 col-xs-12\">\n          <p className=\"text-center text-primary fs-3 fw-semibold mt-4\">\n            Sign-Up Form\n          </p>\n\n          <form autoComplete=\"off\" className=\"form-group\" onSubmit={signup}>\n            <div className=\"form-floating mb-3\">\n              <input\n                type=\"text\"\n                className=\"form-control\"\n                onChange={(e) => setName(e.target.value)}\n                value={name}\n                id=\"floatingInput\"\n                placeholder=\"productname\"\n                required\n              />\n              <label for=\"floatingInput\">Enter Your Name</label>\n            </div>\n\n            <div className=\"form-floating mb-3\">\n              <input\n                type=\"email\"\n                className=\"form-control\"\n                onChange={(e) => setEmail(e.target.value)}\n                value={email}\n                id=\"floatingInput\"\n                placeholder=\"productname\"\n                required\n              />\n              <label for=\"floatingInput\">Enter Your Email Address</label>\n            </div>\n\n            <div className=\"form-floating mb-3\">\n              <input\n                type=\"password\"\n                className=\"form-control\"\n                onChange={(e) => setPassword(e.target.value)}\n                value={password}\n                id=\"floatingInput\"\n                placeholder=\"productname\"\n                required\n              />\n              <label for=\"floatingInput\">Enter Your Password</label>\n            </div>\n\n            <button type=\"submit\" className=\"btn btn-warning px-5\">\n              Sign-Up\n            </button>\n\n            {error && (\n              <span className=\"error-msg fs-6 fw-light mb-4 mt-4\">{error}</span>\n            )}\n            <br />\n            <span className=\"text-secondary fs-6 fw-light mb-4 mt-4\">\n              Already have an account? Login\n              <Link to=\"login\"> Here</Link>\n            </span>\n          </form>\n        </div>\n        <div className=\"col-xl-2 col-lg-1 col-md-1 col-sm-12 col-xs-12\"></div>\n      </div>\n    </div>\n  );\n};\n","import React, { useState } from \"react\";\nimport { auth } from \"../Config/Config\";\nimport { Link } from \"react-router-dom\";\n\nexport const Login = (props) => {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [error, setError] = useState(\"\");\n\n  const login = (e) => {\n    e.preventDefault();\n    auth\n      .signInWithEmailAndPassword(email, password)\n      .then(() => {\n        setEmail(\"\");\n        setPassword(\"\");\n        setError(\"\");\n        props.history.push(\"/\");\n      })\n      .catch((err) => setError(err.message));\n  };\n\n  return (\n    <div className=\"container-xl mt-5\">\n      <div className=\"row\">\n        <div className=\"col-xl-2 col-lg-1 col-md-1 col-sm-12 col-xs-12\"></div>\n        <div className=\"Product-card col-xl-8 col-lg-4 col-md-1 col-sm-12 col-xs-12\">\n          <p className=\"text-center text-primary fs-3 fw-semibold mt-4\">\n            Login Form\n          </p>\n\n          <form autoComplete=\"off\" className=\"form-group mb-5\" onSubmit={login}>\n            <div className=\"form-floating mb-3\">\n              <input\n                type=\"email\"\n                className=\"form-control\"\n                onChange={(e) => setEmail(e.target.value)}\n                value={email}\n                id=\"floatingInput\"\n                placeholder=\"productname\"\n                required\n              />\n              <label for=\"floatingInput\">Enter Your Email Address</label>\n            </div>\n\n            <div className=\"form-floating mb-3\">\n              <input\n                type=\"password\"\n                className=\"form-control\"\n                onChange={(e) => setPassword(e.target.value)}\n                value={password}\n                id=\"floatingInput\"\n                placeholder=\"productname\"\n                required\n              />\n              <label for=\"floatingInput\">Enter Your Password</label>\n            </div>\n\n            <button type=\"submit\" className=\"btn btn-success px-5\">\n              LOGIN\n            </button>\n          </form>\n\n          {error && <span className=\"error-msg fs-6 fw-light mb-4 mt-4\">{error}</span>}\n\n          <span className=\"text-secondary fs-6 fw-light mb-4 mt-4\">\n            Don't have an account? Register\n            <Link to=\"signup\"> Here</Link>\n          </span>\n        </div>\n        <div className=\"col-xl-2 col-lg-1 col-md-1 col-sm-12 col-xs-12\"></div>\n      </div>\n    </div>\n  );\n};\n","import React from 'react'\n\nexport const NotFound = () => {\n    return (\n        <div>\n            notfound\n        </div>\n    )\n}\n","import React, { useContext, useEffect } from 'react'\nimport { CartContext } from '../Global/CartContext'\nimport { Navbar } from './Navbar';\nimport { Icon } from 'react-icons-kit'\nimport { ic_add } from 'react-icons-kit/md/ic_add'\nimport { ic_remove } from 'react-icons-kit/md/ic_remove'\nimport { iosTrashOutline } from 'react-icons-kit/ionicons/iosTrashOutline'\nimport { Link } from 'react-router-dom'\nimport { useHistory } from 'react-router-dom'\nimport { auth } from '../Config/Config'\n\nexport const Cart = ({ user }) => {\n\n    const { shoppingCart, dispatch, totalPrice, totalQty } = useContext(CartContext);\n\n    const history = useHistory();\n\n    useEffect(() => {\n        auth.onAuthStateChanged(user => {\n            if (!user) {\n                history.push('/login');\n            }\n        })\n    })\n\n    return (\n        <>\n            <Navbar user={user} />\n            <>\n                {shoppingCart.length !== 0 && <h1>Cart</h1>}\n                <div className='cart-container'>\n                    {\n                        shoppingCart.length === 0 && <>\n                            <div>no items in your cart or slow internet causing trouble (Refresh the page) or you are not logged in</div>\n                            <div><Link to=\"/\">Return to Home page</Link></div>\n                        </>\n                    }\n                    {shoppingCart && shoppingCart.map(cart => (\n                        <div className='cart-card' key={cart.ProductID}>\n\n                            <div className='cart-img'>\n                                <img src={cart.ProductImg} alt=\"not found\" />\n                            </div>\n\n                            <div className='cart-name'>{cart.ProductName}</div>\n\n                            <div className='cart-price-orignal'>Rs {cart.ProductPrice}.00</div>\n\n                            <div className='inc' onClick={() => dispatch({ type: 'INC', id: cart.ProductID, cart })}>\n                                <Icon icon={ic_add} size={24} />\n                            </div>\n\n                            <div className='quantity'>{cart.qty}</div>\n\n                            <div className='dec' onClick={() => dispatch({ type: 'DEC', id: cart.ProductID, cart })}>\n                                <Icon icon={ic_remove} size={24} />\n                            </div>\n\n                            <div className='cart-price'>\n                                Rs {cart.TotalProductPrice}.00\n                            </div>\n\n                            <button className='delete-btn' onClick={() => dispatch({ type: 'DELETE', id: cart.ProductID, cart })}>\n                                <Icon icon={iosTrashOutline} size={24} />\n                            </button>\n                        </div>\n                    ))\n                    }\n                    {shoppingCart.length > 0 && <div className='cart-summary'>\n                        <div className='cart-summary-heading'>\n                            Cart-Summary\n                        </div>\n                        <div className='cart-summary-price'>\n                            <span>Total Price</span>\n                            <span>{totalPrice}</span>\n                        </div>\n                        <div className='cart-summary-price'>\n                            <span>Total Qty</span>\n                            <span>{totalQty}</span>\n                        </div>\n                        <Link to='cashout' className='cashout-link'>\n                            <button className='btn btn-success btn-md' style={{ marginTop: 5 + 'px' }}>\n                                Cash on delivery\n                        </button>\n                        </Link>\n                    </div>}\n                </div>\n            </>\n        </>\n    )\n}","import React, { useState } from 'react'\nimport { storage, db } from '../Config/Config'\nimport { Link } from 'react-router-dom'\n\nexport const AddProducts = () => {\n\n    const [productName, setProductName] = useState('');\n    const [productPrice, setProductPrice] = useState(0);\n    const [productImg, setProductImg] = useState(null);\n    const [error, setError] = useState('');\n\n    const types = ['image/png', 'image/jpeg']; // image types\n\n    const productImgHandler = (e) => {\n        let selectedFile = e.target.files[0];\n        if (selectedFile && types.includes(selectedFile.type)) {\n            setProductImg(selectedFile);\n            setError('')\n        }\n        else {\n            setProductImg(null);\n            setError('Please select a valid image type (jpg or png)');\n        }\n    }\n\n    // add product\n    const addProduct = (e) => {\n        e.preventDefault();\n        const uploadTask = storage.ref(`product-images/${productImg.name}`).put(productImg);\n        uploadTask.on('state_changed', snapshot => {\n            const progress = (snapshot.bytesTransferred / snapshot.totalBytes) * 100;\n            console.log(progress);\n        }, err => setError(err.message)\n            , () => {\n                storage.ref('product-images').child(productImg.name).getDownloadURL().then(url => {\n                    db.collection('Products').add({\n                        ProductName: productName,\n                        ProductPrice: Number(productPrice),\n                        ProductImg: url\n                    }).then(() => {\n                        setProductName('');\n                        setProductPrice(0)\n                        setProductImg('');\n                        setError('');\n                        document.getElementById('file').value = '';\n                    }).catch(err => setError(err.message))\n                })\n            })\n    }\n\n    return (\n        <div className='container'>\n\n            <div className='container-fluid mt-3'>\n\n                <div className=\"row\">\n                    <div className=\"col-xl-4\"></div>\n                    <div className=\"Product-card col-xl-4\">\n\n                        <p className=\"text-center text-primary fs-3 fw-semibold\">\n                            Add Products To Your DataBase\n                        </p>\n\n                        <form className='form-group' onSubmit={addProduct} autoComplete=\"off\">\n\n\n                            <div className=\"form-floating mb-3\">\n                                <input type=\"text\" className=\"form-control\" onChange={(e) => setProductName(e.target.value)} value={productName}\n                                    id=\"floatingInput\" placeholder=\"productname\" required />\n                                <label for=\"floatingInput\">Product Name</label>\n                            </div>\n\n                            <div className=\"form-floating mb-3\">\n                                <input type=\"number\" className=\"form-control\" onChange={(e) => setProductPrice(e.target.value)} value={productPrice}\n                                    id=\"floatingPassword\" placeholder=\"productprice\" required />\n                                <label for=\"floatingPassword\">Product Price</label>\n                            </div>\n\n\n                            <div class=\"mb-3\">\n                                <label for=\"formFile\" class=\"form-label\">Choose Product Image</label>\n                                <input class=\"form-control\" onChange={productImgHandler} type=\"file\" id=\"formFile\" required />\n                            </div>\n\n                           <center><button className=\"btn btn-success px-5 text-center mb-4\">Add Product</button></center> \n\n                        </form>\n\n                        {/* alert */}\n\n                        {error && <span className='error-msg'>{error}</span>}\n\n                        <Link to=\"/\"><button className='btn btn-outline-primary form-control mt-5 px-5 mb-4'>back to Home</button></Link>\n\n                    </div>\n                    <div className=\"col-xl-4\"></div>\n                </div>\n\n            </div>\n\n\n        </div>\n    )\n}\n","import React, { useState, useEffect, useContext } from 'react'\nimport { auth, db } from '../Config/Config'\nimport { CartContext } from '../Global/CartContext'\nimport { Navbar } from './Navbar';\nimport { useHistory } from 'react-router-dom'\n\nexport const Cashout = (props) => {\n\n    const history = useHistory();\n\n    const { shoppingCart, totalPrice, totalQty, dispatch } = useContext(CartContext);\n\n    // defining state\n    const [name, setName] = useState('');\n    const [email, setEmail] = useState('');\n    const [cell, setCell] = useState('');\n    const [address, setAddress] = useState('');\n    const [error, setError] = useState('');\n    const [successMsg, setSuccessMsg] = useState('');\n\n    useEffect(() => {\n        auth.onAuthStateChanged(user => {\n            if (user) {\n                db.collection('SignedUpUsersData').doc(user.uid).onSnapshot(snapshot => {\n                    setName(snapshot.data().Name);\n                    setEmail(snapshot.data().Email);\n                })\n            }\n            else {\n                history.push('/login')\n            }\n        })\n    })\n\n    const cashoutSubmit = (e) => {\n        e.preventDefault();\n        auth.onAuthStateChanged(user => {\n            if (user) {\n                const date = new Date();\n                const time = date.getTime();\n                db.collection('Buyer-info ' + user.uid).doc('_' + time).set({\n                    BuyerName: name,\n                    BuyerEmail: email,\n                    BuyerCell: cell,\n                    BuyerAddress: address,\n                    BuyerPayment: totalPrice,\n                    BuyerQuantity: totalQty\n                }).then(() => {\n                    setCell('');\n                    setAddress('');\n                    dispatch({ type: 'EMPTY' })\n                    setSuccessMsg('Your order has been placed successfully. Thanks for visiting us. You will be redirected to home page after 5 seconds');\n                    setTimeout(() => {\n                        history.push('/')\n                    }, 5000)\n                }).catch(err => setError(err.message))\n            }\n        })\n    }\n\n    return (\n        <>\n            <Navbar user={props.user} />\n            <div className='container'>\n                <br />\n                <h2>Cashout Details</h2>\n                <br />\n                {successMsg && <div className='success-msg'>{successMsg}</div>}\n                <form autoComplete=\"off\" className='form-group' onSubmit={cashoutSubmit}>\n                    <label htmlFor=\"name\">Name</label>\n                    <input type=\"text\" className='form-control' required\n                        value={name} disabled />\n                    <br />\n                    <label htmlFor=\"email\">Email</label>\n                    <input type=\"email\" className='form-control' required\n                        value={email} disabled />\n                    <br />\n                    <label htmlFor=\"Cell No\">Cell No</label>\n                    <input type=\"number\" className='form-control' required\n                        onChange={(e) => setCell(e.target.value)} value={cell} placeholder='eg 03123456789' />\n                    <br />\n                    <label htmlFor=\"Delivery Address\">Delivery Address</label>\n                    <input type=\"text\" className='form-control' required\n                        onChange={(e) => setAddress(e.target.value)} value={address} />\n                    <br />\n                    <label htmlFor=\"Price To Pay\">Price To Pay</label>\n                    <input type=\"number\" className='form-control' required\n                        value={totalPrice} disabled />\n                    <br />\n                    <label htmlFor=\"Total No of Products\">Total No of Products</label>\n                    <input type=\"number\" className='form-control' required\n                        value={totalQty} disabled />\n                    <br />\n                    <button type=\"submit\" className='btn btn-success btn-md mybtn'>SUBMIT</button>\n                </form>\n                {error && <span className='error-msg'>{error}</span>}\n            </div>\n        </>\n    )\n}\n","import React, { Component } from 'react'\nimport { ProductsContextProvider } from './Global/ProductsContext'\nimport { Home } from './Components/Home'\nimport { BrowserRouter, Switch, Route } from 'react-router-dom'\nimport { Signup } from './Components/Signup'\nimport { Login } from './Components/Login'\nimport { NotFound } from './Components/NotFound'\nimport { auth, db } from './Config/Config'\nimport { CartContextProvider } from './Global/CartContext'\nimport { Cart } from './Components/Cart'\nimport { AddProducts } from './Components/AddProducts'\nimport { Cashout } from './Components/Cashout'\n\nexport class App extends Component {\n\n    state = {\n        user: null,\n    }\n\n    componentDidMount() {\n\n        // getting user info for navigation bar\n        auth.onAuthStateChanged(user => {\n            if (user) {\n                db.collection('SignedUpUsersData').doc(user.uid).get().then(snapshot => {\n                    this.setState({\n                        user: snapshot.data().Name\n                    })\n                })\n            }\n            else {\n                this.setState({\n                    user: null\n                })\n            }\n        })\n\n    }\n\n    render() {\n        return (\n            <ProductsContextProvider>\n                <CartContextProvider>\n                    <BrowserRouter>\n                        <Switch>\n                            <Route exact path='/' component={() => <Home user={this.state.user} />} />\n                            <Route exact path=\"/signup\" component={Signup} />\n                            <Route exact path=\"/login\" component={Login} />\n                            <Route exact path=\"/cartproducts\" component={() => <Cart user={this.state.user} />} />\n                            <Route exact path=\"/addproducts\" component={AddProducts} />\n                            <Route exact path='/cashout' component={() => <Cashout user={this.state.user} />} />\n                            <Route component={NotFound} />\n                        </Switch>\n                    </BrowserRouter>\n                </CartContextProvider>\n            </ProductsContextProvider>\n        )\n    }\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.css';\n\nReactDOM.render(\n\n  <App />,\n  \n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}